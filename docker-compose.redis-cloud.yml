version: '3.8'

services:
  # Node.js application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - clickhouse
      - kafka
    env_file:
      - .env.redis-cloud
    environment:
      - NODE_ENV=production
      # Flag to use Redis Cloud configuration
      - REDIS_CLOUD=true
      # Redis connection settings (non-sensitive)
      - REDIS_RETRY_STRATEGY=true
      - REDIS_MAX_RETRIES=10
      - REDIS_CONNECT_TIMEOUT=30000
      - REDIS_KEEP_ALIVE=true
      - REDIS_ENABLED=true
      # Database config using environment variables
      - DATABASE_URL=${DATABASE_URL:-postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-flarenet}?schema=public}
    volumes:
      - .:/app
      - /app/node_modules

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      - .env.development
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - POSTGRES_DB=${POSTGRES_DB:-flarenet}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=100' -c 'shared_buffers=128MB'

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse-config:/etc/clickhouse-server/config.d
    env_file:
      - .env.development
    environment:
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-default}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-changeme}
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_USER_ADMIN=${CLICKHOUSE_USER_ADMIN:-admin}
      - CLICKHOUSE_PASSWORD_ADMIN=${CLICKHOUSE_PASSWORD_ADMIN:-changeme}
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    restart: always

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_CREATE_TOPICS: "test:1:1,events:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Redis service is commented out because we're using Redis Cloud
  # Uncomment this section if you want to use local Redis instead
  # redis:
  #   image: redis:latest
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   command: redis-server --appendonly yes

volumes:
  postgres-data:
  clickhouse-data:
  # redis-data: # Uncomment if using local Redis